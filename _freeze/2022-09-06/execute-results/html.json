{
  "hash": "9a707af35d763e336aad5be2aee5affd",
  "result": {
    "markdown": "---\ntitle: \"2022 Week 36: LEGO Sets\"\nexecute: \n  freeze: auto\n---\n\n\nThis week I eschewed a scientific format, and instead tried to create an \ninfographic that might be included in a LEGO magazine, complete with pictures \nand bold colours.\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(hrbrthemes)\nlibrary(showtext)\nlibrary(rsvg)\nlibrary(ggimage)\nlibrary(cropcircles)\nlibrary(ggrepel)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add_google(\"Roboto Condensed\")\nshowtext_auto()\n```\n:::\n\n\n## Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsets <- readr::read_csv(\n  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-06/sets.csv.gz')\n\nthemes <- readr::read_csv(\n  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-06/themes.csv.gz')\n```\n:::\n\n\n## Clean Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlego <- left_join(sets, themes, by = c(\"theme_id\" = \"id\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsafe_image <- possibly(circle_crop, otherwise = NA)\n\nlego <- lego |> \n    filter(num_parts > 0) |> \n    arrange(year) |> \n    group_by(name.x) |> \n    slice(1) |> \n    ungroup() |> \n    arrange(year) |> \n    mutate(ATH = ifelse(num_parts >= cummax(num_parts), \n                        TRUE, FALSE)) |> \n    filter(ATH == TRUE) |> \n    group_by(year) |> \n    arrange(num_parts) |> \n    slice(1) |> \n    ungroup() |> \n    mutate(yadj = rep(c(2500, -2500), length.out = 17),\n           yadj = yadj + 17500/80*(year-1949)) |> \n    rowwise() |> \n    mutate(img = safe_image(img_url)) |> \n    ungroup() |> \n    group_by(is.na(img)) |> \n    mutate(n = n(),\n           yadj = rep(c(1000, 6000, 9000), length.out = n),\n           yadj = yadj + num_parts,\n           yadj = ifelse(is.na(img), 0, yadj))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in rep(c(1000, 6000, 9000), length.out = n): first element used of\n'length.out' argument\n\nWarning in rep(c(1000, 6000, 9000), length.out = n): first element used of\n'length.out' argument\n```\n:::\n:::\n\n\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlegoPlot <- lego |> \n    ggplot(aes(x = year, y = num_parts)) +\n    geom_line() +\n    geom_area(fill = \"#DD1A21\") +\n    geom_segment(aes(x = year, xend = year, y = num_parts, yend = yadj)) +\n    geom_image(aes(image = img, y = yadj, x = year), \n               size = 0.12, inherit.aes = FALSE) +\n    ylim(0, 21000) +\n    scale_colour_viridis_d() +\n    scale_x_continuous(expand = expansion(add = 9),\n                       breaks = seq(1950, 2020, by = 10)) +\n    theme_ipsum_rc() +\n    theme(legend.position = \"bottom\",\n          axis.text = element_text(colour = \"black\"),\n          axis.title.x = element_text(size = 14),\n          axis.title.y = element_text(size = 14),\n          plot.background = element_rect(fill = \"#FFCD03\", color = NA),\n          panel.grid.major = element_line(colour = \"black\"),\n          panel.grid.minor = element_blank()) +\n    xlab(\"Year of Release\") +\n    ylab(\"Number of Parts\") +\n    ggtitle(\"The Biggest and Best LEGO Sets (1949-2021)\",\n            \"A timeline of LEGO sets that set new recods for part numbers.\nData from rebrickable.\")\n\ntmp <- tempfile()\nggsave(tmp, legoPlot, device = \"svg\", width = 7, height = 7)\nrsvg_png(tmp, \"Out/2022-09-06.png\")\n```\n:::\n\n\n![Final Plot](Out/2022-09-06.png)\n\n## Session Info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.1 (2022-06-23 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19043)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] ggrepel_0.9.1     cropcircles_0.1.0 ggimage_0.3.1     rsvg_2.3.1       \n [5] showtext_0.9-5    showtextdb_3.0    sysfonts_0.8.8    hrbrthemes_0.8.0 \n [9] forcats_0.5.2     stringr_1.4.1     dplyr_1.0.9       purrr_0.3.4      \n[13] readr_2.1.2       tidyr_1.2.0       tibble_3.1.7      tidyverse_1.3.2  \n[17] ggplot2_3.3.6    \n\nloaded via a namespace (and not attached):\n [1] fs_1.5.2            lubridate_1.8.0     bit64_4.0.5        \n [4] httr_1.4.4          tools_4.2.1         backports_1.4.1    \n [7] utf8_1.2.2          R6_2.5.1            DBI_1.1.3          \n[10] colorspace_2.0-3    withr_2.5.0         tidyselect_1.1.2   \n[13] bit_4.0.4           curl_4.3.2          compiler_4.2.1     \n[16] extrafontdb_1.0     textshaping_0.3.6   cli_3.3.0          \n[19] rvest_1.0.3         xml2_1.3.3          labeling_0.4.2     \n[22] scales_1.2.1        systemfonts_1.0.4   digest_0.6.29      \n[25] yulab.utils_0.0.5   svglite_2.1.0       rmarkdown_2.16     \n[28] pkgconfig_2.0.3     htmltools_0.5.2     extrafont_0.18     \n[31] dbplyr_2.2.1        fastmap_1.1.0       htmlwidgets_1.5.4  \n[34] rlang_1.0.4         readxl_1.4.1        rstudioapi_0.14    \n[37] farver_2.1.1        gridGraphics_0.5-1  generics_0.1.3     \n[40] jsonlite_1.8.0      vroom_1.5.7         googlesheets4_1.0.1\n[43] magrittr_2.0.3      ggplotify_0.1.0     Rcpp_1.0.8.3       \n[46] munsell_0.5.0       fansi_1.0.3         gdtools_0.2.4      \n[49] lifecycle_1.0.1     stringi_1.7.6       yaml_2.3.5         \n[52] grid_4.2.1          parallel_4.2.1      crayon_1.5.1       \n[55] haven_2.5.1         hms_1.1.2           magick_2.7.3       \n[58] knitr_1.40          pillar_1.8.1        reprex_2.0.2       \n[61] glue_1.6.2          evaluate_0.16       ggfun_0.0.7        \n[64] modelr_0.1.9        vctrs_0.4.1         tzdb_0.3.0         \n[67] Rttf2pt1_1.3.10     cellranger_1.1.0    gtable_0.3.1       \n[70] assertthat_0.2.1    xfun_0.31           broom_1.0.1        \n[73] ragg_1.2.2          googledrive_2.0.0   gargle_1.2.0       \n[76] ellipsis_0.3.2     \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}