[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DataViz Portfolio",
    "section": "",
    "text": "My goal with TidyTuesday each week is to learn something new, and consequently I usually end up focusing on one or two parts of the workflow. Data wrangling may be incomplete, overcomplicated, or even totally ignored if it suits my goals for the week; the resulting figures should not be taken too seriously. I reserve the right to go back and tinker with these figures without warning.\n\n\n\n\n\n\nLEGO Sets\n\n\n\n \n\n\n\n\nPell Grants\n\n\n\n \n\n\n\n\nMoore’s Law\n\n\n\n\n\n\n\nPsychometrics\n\n\n\n \n\n\n\n\nFerris Wheels"
  },
  {
    "objectID": "2022-09-06.html",
    "href": "2022-09-06.html",
    "title": "2022 Week 36: LEGO Sets",
    "section": "",
    "text": "This week I eschewed a scientific format, and instead tried to create an infographic that might be included in a LEGO magazine, complete with pictures and bold colours."
  },
  {
    "objectID": "2022-09-06.html#setup",
    "href": "2022-09-06.html#setup",
    "title": "2022 Week 36: LEGO Sets",
    "section": "Setup",
    "text": "Setup\n\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(hrbrthemes)\nlibrary(showtext)\nlibrary(rsvg)\nlibrary(ggimage)\nlibrary(cropcircles)\nlibrary(ggrepel)\n\n\nfont_add_google(\"Roboto Condensed\")\nshowtext_auto()"
  },
  {
    "objectID": "2022-09-06.html#load-data",
    "href": "2022-09-06.html#load-data",
    "title": "2022 Week 36: LEGO Sets",
    "section": "Load Data",
    "text": "Load Data\n\nsets <- readr::read_csv(\n  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-06/sets.csv.gz')\n\nthemes <- readr::read_csv(\n  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-06/themes.csv.gz')"
  },
  {
    "objectID": "2022-09-06.html#clean-data",
    "href": "2022-09-06.html#clean-data",
    "title": "2022 Week 36: LEGO Sets",
    "section": "Clean Data",
    "text": "Clean Data\n\nlego <- left_join(sets, themes, by = c(\"theme_id\" = \"id\"))\n\n\nsafe_image <- possibly(circle_crop, otherwise = NA)\n\nlego <- lego |> \n    filter(num_parts > 0) |> \n    arrange(year) |> \n    group_by(name.x) |> \n    slice(1) |> \n    ungroup() |> \n    arrange(year) |> \n    mutate(ATH = ifelse(num_parts >= cummax(num_parts), \n                        TRUE, FALSE)) |> \n    filter(ATH == TRUE) |> \n    group_by(year) |> \n    arrange(num_parts) |> \n    slice(1) |> \n    ungroup() |> \n    mutate(yadj = rep(c(2500, -2500), length.out = 17),\n           yadj = yadj + 17500/80*(year-1949)) |> \n    rowwise() |> \n    mutate(img = safe_image(img_url)) |> \n    ungroup() |> \n    group_by(is.na(img)) |> \n    mutate(n = n(),\n           yadj = rep(c(1000, 6000, 9000), length.out = n),\n           yadj = yadj + num_parts,\n           yadj = ifelse(is.na(img), 0, yadj))\n\nWarning in rep(c(1000, 6000, 9000), length.out = n): first element used of\n'length.out' argument\n\nWarning in rep(c(1000, 6000, 9000), length.out = n): first element used of\n'length.out' argument"
  },
  {
    "objectID": "2022-09-06.html#plot",
    "href": "2022-09-06.html#plot",
    "title": "2022 Week 36: LEGO Sets",
    "section": "Plot",
    "text": "Plot\n\nlegoPlot <- lego |> \n    ggplot(aes(x = year, y = num_parts)) +\n    geom_line() +\n    geom_area(fill = \"#DD1A21\") +\n    geom_segment(aes(x = year, xend = year, y = num_parts, yend = yadj)) +\n    geom_image(aes(image = img, y = yadj, x = year), \n               size = 0.12, inherit.aes = FALSE) +\n    ylim(0, 21000) +\n    scale_colour_viridis_d() +\n    scale_x_continuous(expand = expansion(add = 9),\n                       breaks = seq(1950, 2020, by = 10)) +\n    theme_ipsum_rc() +\n    theme(legend.position = \"bottom\",\n          axis.text = element_text(colour = \"black\"),\n          axis.title.x = element_text(size = 14),\n          axis.title.y = element_text(size = 14),\n          plot.background = element_rect(fill = \"#FFCD03\", color = NA),\n          panel.grid.major = element_line(colour = \"black\"),\n          panel.grid.minor = element_blank()) +\n    xlab(\"Year of Release\") +\n    ylab(\"Number of Parts\") +\n    ggtitle(\"The Biggest and Best LEGO Sets (1949-2021)\",\n            \"A timeline of LEGO sets that set new recods for part numbers.\nData from rebrickable.\")\n\ntmp <- tempfile()\nggsave(tmp, legoPlot, device = \"svg\", width = 7, height = 7)\nrsvg_png(tmp, \"Out/2022-09-06.png\")\n\n\n\n\nFinal Plot"
  },
  {
    "objectID": "2022-09-06.html#session-info",
    "href": "2022-09-06.html#session-info",
    "title": "2022 Week 36: LEGO Sets",
    "section": "Session Info",
    "text": "Session Info\n\nsessionInfo()\n\nR version 4.2.1 (2022-06-23 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19043)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] ggrepel_0.9.1     cropcircles_0.1.0 ggimage_0.3.1     rsvg_2.3.1       \n [5] showtext_0.9-5    showtextdb_3.0    sysfonts_0.8.8    hrbrthemes_0.8.0 \n [9] forcats_0.5.2     stringr_1.4.1     dplyr_1.0.9       purrr_0.3.4      \n[13] readr_2.1.2       tidyr_1.2.0       tibble_3.1.7      tidyverse_1.3.2  \n[17] ggplot2_3.3.6    \n\nloaded via a namespace (and not attached):\n [1] fs_1.5.2            lubridate_1.8.0     bit64_4.0.5        \n [4] httr_1.4.4          tools_4.2.1         backports_1.4.1    \n [7] utf8_1.2.2          R6_2.5.1            DBI_1.1.3          \n[10] colorspace_2.0-3    withr_2.5.0         tidyselect_1.1.2   \n[13] bit_4.0.4           curl_4.3.2          compiler_4.2.1     \n[16] extrafontdb_1.0     textshaping_0.3.6   cli_3.3.0          \n[19] rvest_1.0.3         xml2_1.3.3          labeling_0.4.2     \n[22] scales_1.2.1        systemfonts_1.0.4   digest_0.6.29      \n[25] yulab.utils_0.0.5   svglite_2.1.0       rmarkdown_2.16     \n[28] pkgconfig_2.0.3     htmltools_0.5.2     extrafont_0.18     \n[31] dbplyr_2.2.1        fastmap_1.1.0       htmlwidgets_1.5.4  \n[34] rlang_1.0.4         readxl_1.4.1        rstudioapi_0.14    \n[37] farver_2.1.1        gridGraphics_0.5-1  generics_0.1.3     \n[40] jsonlite_1.8.0      vroom_1.5.7         googlesheets4_1.0.1\n[43] magrittr_2.0.3      ggplotify_0.1.0     Rcpp_1.0.8.3       \n[46] munsell_0.5.0       fansi_1.0.3         gdtools_0.2.4      \n[49] lifecycle_1.0.1     stringi_1.7.6       yaml_2.3.5         \n[52] grid_4.2.1          parallel_4.2.1      crayon_1.5.1       \n[55] haven_2.5.1         hms_1.1.2           magick_2.7.3       \n[58] knitr_1.40          pillar_1.8.1        reprex_2.0.2       \n[61] glue_1.6.2          evaluate_0.16       ggfun_0.0.7        \n[64] modelr_0.1.9        vctrs_0.4.1         tzdb_0.3.0         \n[67] Rttf2pt1_1.3.10     cellranger_1.1.0    gtable_0.3.1       \n[70] assertthat_0.2.1    xfun_0.31           broom_1.0.1        \n[73] ragg_1.2.2          googledrive_2.0.0   gargle_1.2.0       \n[76] ellipsis_0.3.2"
  },
  {
    "objectID": "2022-08-30.html",
    "href": "2022-08-30.html",
    "title": "2022 Week 35: Pell Grants",
    "section": "",
    "text": "library(ggplot2)\nlibrary(tidyverse)\nlibrary(hrbrthemes)\nlibrary(showtext)\nlibrary(urbnmapr)\nlibrary(rsvg)\nlibrary(ggrepel)\n\n\nfont_add_google(\"Roboto Condensed\")\nshowtext_auto()"
  },
  {
    "objectID": "2022-08-30.html#load-data",
    "href": "2022-08-30.html#load-data",
    "title": "2022 Week 35: Pell Grants",
    "section": "Load Data",
    "text": "Load Data\n\ntuesdata <- tidytuesdayR::tt_load('2022-08-30')\n\n\n    Downloading file 1 of 1: `pell.csv`\n\npell <- tuesdata$pell"
  },
  {
    "objectID": "2022-08-30.html#clean-data",
    "href": "2022-08-30.html#clean-data",
    "title": "2022 Week 35: Pell Grants",
    "section": "Clean Data",
    "text": "Clean Data\n\nstateSF <- get_urbn_map(map = \"territories_states\", sf = TRUE)\n\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\n\npellSF <- pell |> \n    filter(YEAR == 2017) |> \n    group_by(STATE) |> \n    summarise(sumAward = sum(AWARD),\n              sumRecipient = sum(RECIPIENT)) |> \n    rename(state_abbv = STATE) |> \n    full_join(stateSF, by = \"state_abbv\") |> \n    filter(!is.na(state_name))"
  },
  {
    "objectID": "2022-08-30.html#plot",
    "href": "2022-08-30.html#plot",
    "title": "2022 Week 35: Pell Grants",
    "section": "Plot",
    "text": "Plot\n\npellPlot <- pellSF %>%\n    ggplot(aes(geometry = geometry)) +\n    geom_sf(aes(fill = round(sumAward/1000000)),\n            color = \"#F3EFE0\", size = 0.25) +\n    geom_text_repel(aes(label = round(sumRecipient/1000)),  \n                    color = \"#AA336A\", \n                    stat = \"sf_coordinates\", \n                    force_pull = 100, \n                    nudge_x = 5000,\n                    min.segment.length = 0, \n                    seed = 1) +\n    theme_ipsum_rc() +\n    theme(panel.background = element_rect(fill = \"#F5F3E5\", \n                                          linetype = 0),\n          plot.background = element_rect(fill = \"#F5F3E5\", \n                                         linetype = 0),\n          legend.position = \"bottom\",\n          axis.title.x=element_blank(),\n          axis.text.x = element_blank(),\n          axis.ticks.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.y = element_blank(),\n          axis.ticks.y = element_blank(),\n          axis.line.x = element_blank()) +\n    scale_fill_continuous(high = \"#132B43\", \n                          low = \"#56B1F7\", \n                          name = \"Total Pell Grant Funding (Million USD$)\")  +\n    labs(title = \"2017 Pell Grants by State\",\n         subtitle = \"States are coloured by total funding recieved and labeled with the number of \nrecipients, counted in thousands.\")\n\ntmp <- tempfile()\nggsave(tmp, pellPlot, device = \"svg\", width = 7, height = 7)\nrsvg_png(tmp, \"Out/2022-08-30.png\")\n\n\n\n\nFinal Plot"
  },
  {
    "objectID": "2022-08-30.html#session-info",
    "href": "2022-08-30.html#session-info",
    "title": "2022 Week 35: Pell Grants",
    "section": "Session Info",
    "text": "Session Info\n\nsessionInfo()\n\nR version 4.2.1 (2022-06-23 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19043)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] ggrepel_0.9.1       rsvg_2.3.1          urbnmapr_0.0.0.9002\n [4] showtext_0.9-5      showtextdb_3.0      sysfonts_0.8.8     \n [7] hrbrthemes_0.8.0    forcats_0.5.2       stringr_1.4.1      \n[10] dplyr_1.0.9         purrr_0.3.4         readr_2.1.2        \n[13] tidyr_1.2.0         tibble_3.1.7        tidyverse_1.3.2    \n[16] ggplot2_3.3.6      \n\nloaded via a namespace (and not attached):\n [1] fs_1.5.2            sf_1.0-8            usethis_2.1.6      \n [4] lubridate_1.8.0     bit64_4.0.5         httr_1.4.4         \n [7] tools_4.2.1         backports_1.4.1     utf8_1.2.2         \n[10] R6_2.5.1            KernSmooth_2.23-20  DBI_1.1.3          \n[13] colorspace_2.0-3    withr_2.5.0         tidyselect_1.1.2   \n[16] bit_4.0.4           curl_4.3.2          compiler_4.2.1     \n[19] extrafontdb_1.0     textshaping_0.3.6   cli_3.3.0          \n[22] rvest_1.0.3         xml2_1.3.3          labeling_0.4.2     \n[25] scales_1.2.1        classInt_0.4-7      proxy_0.4-27       \n[28] systemfonts_1.0.4   digest_0.6.29       svglite_2.1.0      \n[31] rmarkdown_2.16      tidytuesdayR_1.0.2  pkgconfig_2.0.3    \n[34] htmltools_0.5.2     extrafont_0.18      dbplyr_2.2.1       \n[37] fastmap_1.1.0       htmlwidgets_1.5.4   rlang_1.0.4        \n[40] readxl_1.4.1        rstudioapi_0.14     farver_2.1.1       \n[43] generics_0.1.3      jsonlite_1.8.0      vroom_1.5.7        \n[46] googlesheets4_1.0.1 magrittr_2.0.3      s2_1.1.0           \n[49] Rcpp_1.0.8.3        munsell_0.5.0       fansi_1.0.3        \n[52] gdtools_0.2.4       lifecycle_1.0.1     stringi_1.7.6      \n[55] yaml_2.3.5          grid_4.2.1          parallel_4.2.1     \n[58] crayon_1.5.1        haven_2.5.1         hms_1.1.2          \n[61] knitr_1.40          pillar_1.8.1        wk_0.6.0           \n[64] reprex_2.0.2        glue_1.6.2          evaluate_0.16      \n[67] modelr_0.1.9        vctrs_0.4.1         tzdb_0.3.0         \n[70] selectr_0.4-2       Rttf2pt1_1.3.10     cellranger_1.1.0   \n[73] gtable_0.3.1        assertthat_0.2.1    xfun_0.31          \n[76] broom_1.0.1         e1071_1.7-11        ragg_1.2.2         \n[79] class_7.3-20        googledrive_2.0.0   gargle_1.2.0       \n[82] units_0.8-0         ellipsis_0.3.2"
  },
  {
    "objectID": "2022-08-23.html",
    "href": "2022-08-23.html",
    "title": "2022 Week 34: Moore’s Law",
    "section": "",
    "text": "library(ggplot2)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(hrbrthemes)\nlibrary(showtext)\nlibrary(rsvg)\nlibrary(gganimate)\n\n\nfont_add_google(\"Roboto Condensed\")\nshowtext_auto()"
  },
  {
    "objectID": "2022-08-23.html#load-data",
    "href": "2022-08-23.html#load-data",
    "title": "2022 Week 34: Moore’s Law",
    "section": "Load Data",
    "text": "Load Data\nchip_dataset.csv downloaded from Vercel.\nRedistribution of the dataset is not permitted.\n\nchips <- read.csv(\"Data/chip_dataset.csv\")"
  },
  {
    "objectID": "2022-08-23.html#clean-data",
    "href": "2022-08-23.html#clean-data",
    "title": "2022 Week 34: Moore’s Law",
    "section": "Clean Data",
    "text": "Clean Data\n\nchips <- chips |>\n  mutate(Date = as_date(Release.Date)) |> \n  filter(Foundry != \"Unknown\" &\n               !is.na(Date) &\n               !is.na(Transistors..million.) &\n           Type == \"GPU\") \n\nWarning: 75 failed to parse."
  },
  {
    "objectID": "2022-08-23.html#get-regression-lines",
    "href": "2022-08-23.html#get-regression-lines",
    "title": "2022 Week 34: Moore’s Law",
    "section": "Get Regression Lines",
    "text": "Get Regression Lines\n\nchipMod <- chips |> \n  mutate(Date = as.numeric(Date)) |> \n  glm(Transistors..million. ~ Date + Foundry,\n      family = \"poisson\",\n      data = _)\n\npredInput <- chips |> \n    mutate(Foundry = factor(Foundry),\n          Date = as.numeric(Date)) |> \n    group_by(Foundry) |> \n    summarise(min = min(Date),\n              max = max(Date)) |> \n    pivot_longer(cols = c(\"min\", \"max\"),\n                 values_to = \"Date\")\n\nchipPreds <- predict(chipMod, \n                     newdata = predInput[,c(3,1)], \n                     type = \"response\") |> \n  data.frame() |> \n  cbind(predInput) |> \n  rename(Transistors..million. = 1) |> \n  mutate(Date = as_date(Date))"
  },
  {
    "objectID": "2022-08-23.html#plot",
    "href": "2022-08-23.html#plot",
    "title": "2022 Week 34: Moore’s Law",
    "section": "Plot",
    "text": "Plot\n\nlinePlot <- chips |> \n    ggplot(aes(x = Date, \n               y = Transistors..million., \n               color = Foundry)) +\n    geom_point(aes(group = seq_along(Date)),\n               alpha = 0.5) +\n    geom_line(data = chipPreds, size = 0.8) +\n    scale_y_log10() +\n    theme_ipsum_rc(axis_title_size = \"12\") +\n    scale_color_viridis_d() +\n    theme(legend.position = \"bottom\") +\n    xlab(\"Release Date\") +\n    ylab(\"Transistors (Millions)\") +\n    ggtitle(label = \"GPU Transistor Count by Release Date\",\n            subtitle = \"Data from https://chip-dataset.vercel.app/\") +\n    transition_reveal(Date)\n\nanimate(linePlot, end_pause = 10, \n        height = 7, \n        width = 7, \n        units = \"in\", \n        res = 75) |> \n  anim_save(\"Out/2022-08-23.gif\", animation = _)\n\n\n\n\nFinal Plot"
  },
  {
    "objectID": "2022-08-23.html#session-info",
    "href": "2022-08-23.html#session-info",
    "title": "2022 Week 34: Moore’s Law",
    "section": "Session Info",
    "text": "Session Info\n\nsessionInfo()\n\nR version 4.2.1 (2022-06-23 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19043)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] gganimate_1.0.7  rsvg_2.3.1       showtext_0.9-5   showtextdb_3.0  \n [5] sysfonts_0.8.8   hrbrthemes_0.8.0 lubridate_1.8.0  forcats_0.5.2   \n [9] stringr_1.4.1    dplyr_1.0.9      purrr_0.3.4      readr_2.1.2     \n[13] tidyr_1.2.0      tibble_3.1.7     tidyverse_1.3.2  ggplot2_3.3.6   \n\nloaded via a namespace (and not attached):\n [1] httr_1.4.4          viridisLite_0.4.1   jsonlite_1.8.0     \n [4] modelr_0.1.9        assertthat_0.2.1    googlesheets4_1.0.1\n [7] cellranger_1.1.0    yaml_2.3.5          progress_1.2.2     \n[10] gdtools_0.2.4       Rttf2pt1_1.3.10     pillar_1.8.1       \n[13] backports_1.4.1     glue_1.6.2          extrafontdb_1.0    \n[16] digest_0.6.29       rvest_1.0.3         colorspace_2.0-3   \n[19] plyr_1.8.7          htmltools_0.5.2     pkgconfig_2.0.3    \n[22] broom_1.0.1         magick_2.7.3        haven_2.5.1        \n[25] scales_1.2.1        tweenr_2.0.1        tzdb_0.3.0         \n[28] googledrive_2.0.0   generics_0.1.3      farver_2.1.1       \n[31] ellipsis_0.3.2      withr_2.5.0         cli_3.3.0          \n[34] magrittr_2.0.3      crayon_1.5.1        readxl_1.4.1       \n[37] evaluate_0.16       fs_1.5.2            fansi_1.0.3        \n[40] xml2_1.3.3          tools_4.2.1         prettyunits_1.1.1  \n[43] hms_1.1.2           gargle_1.2.0        lifecycle_1.0.1    \n[46] munsell_0.5.0       reprex_2.0.2        compiler_4.2.1     \n[49] systemfonts_1.0.4   rlang_1.0.4         grid_4.2.1         \n[52] rstudioapi_0.14     htmlwidgets_1.5.4   rmarkdown_2.16     \n[55] gtable_0.3.1        curl_4.3.2          DBI_1.1.3          \n[58] R6_2.5.1            knitr_1.40          fastmap_1.1.0      \n[61] extrafont_0.18      utf8_1.2.2          stringi_1.7.6      \n[64] Rcpp_1.0.8.3        vctrs_0.4.1         dbplyr_2.2.1       \n[67] tidyselect_1.1.2    xfun_0.31"
  },
  {
    "objectID": "2022-08-16.html",
    "href": "2022-08-16.html",
    "title": "2022 Week 33: Psychometrics",
    "section": "",
    "text": "library(ggplot2)\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\nlibrary(magrittr)\nlibrary(showtext)\nlibrary(hrbrthemes)\nlibrary(rsvg)\n\n\nfont_add_google(\"Roboto Condensed\")\nshowtext_auto()"
  },
  {
    "objectID": "2022-08-16.html#load-data",
    "href": "2022-08-16.html#load-data",
    "title": "2022 Week 33: Psychometrics",
    "section": "Load Data",
    "text": "Load Data\n\ntuesdata <- tt_load('2022-08-16')\n\n\n    Downloading file 1 of 3: `characters.csv`\n    Downloading file 2 of 3: `myers_briggs.csv`\n    Downloading file 3 of 3: `psych_stats.csv`\n\npsych_stats <- tuesdata$psych_stats\nhead(psych_stats)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nchar_id\nchar_name\nuni_id\nuni_name\nquestion\npersonality\navg_rating\nrank\nrating_sd\nnumber_ratings\n\n\n\n\nF2\nMonica Geller\nF\nFriends\nmessy/neat\nneat\n95.7\n9\n11.7\n1079\n\n\nF2\nMonica Geller\nF\nFriends\ndisorganized/self-disciplined\nself-disciplined\n95.2\n27\n11.2\n1185\n\n\nF2\nMonica Geller\nF\nFriends\ndiligent/lazy\ndiligent\n93.9\n87\n10.4\n1166\n\n\nF2\nMonica Geller\nF\nFriends\non-time/tardy\non-time\n93.8\n34\n14.3\n236\n\n\nF2\nMonica Geller\nF\nFriends\ncompetitive/cooperative\ncompetitive\n93.6\n56\n13.4\n1168\n\n\nF2\nMonica Geller\nF\nFriends\nscheduled/spontaneous\nscheduled\n93.4\n23\n14.5\n1173"
  },
  {
    "objectID": "2022-08-16.html#transform-data",
    "href": "2022-08-16.html#transform-data",
    "title": "2022 Week 33: Psychometrics",
    "section": "Transform Data",
    "text": "Transform Data\n\npsych_stats <- psych_stats |> \n    filter(str_count(question, \"/\") <=1) |> \n    separate(\"question\", into = c(\"One\", \"Two\"), sep = \"/\", remove = FALSE) |> \n    mutate(Score = ifelse(One == personality, 1, 0)) |> \n    select(-c(One, Two, personality, avg_rating, rank, \n              rating_sd, number_ratings)) |> \n    pivot_wider(names_from = question, \n                values_from = Score,\n                values_fn = sum)"
  },
  {
    "objectID": "2022-08-16.html#dimension-reduction",
    "href": "2022-08-16.html#dimension-reduction",
    "title": "2022 Week 33: Psychometrics",
    "section": "Dimension Reduction",
    "text": "Dimension Reduction\n\nfactorRes <- select(psych_stats, -c(char_id, char_name, uni_id, uni_name)) |> \n    factanal(factors = 5, scores = \"regression\")\n\nscores <- factorRes$scores |> \n  set_colnames(c(\"Agreeableness\",\"Openness\",\"Conscientiousness\", \"Extraversion\", \n                 \"Narcicism\")) |> \n  cbind(select(psych_stats, c(char_id, char_name, uni_id, uni_name)))\n\nhead(scores)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAgreeableness\nOpenness\nConscientiousness\nExtraversion\nNarcicism\nchar_id\nchar_name\nuni_id\nuni_name\n\n\n\n\n0.2599155\n-0.4579260\n0.3571530\n1.4393580\n-1.0757393\nF2\nMonica Geller\nF\nFriends\n\n\n0.2518833\n1.9207419\n-0.0626697\n1.1891392\n-1.5597640\nF1\nRachel Green\nF\nFriends\n\n\n0.6608430\n0.7265587\n-1.1785029\n-0.1903910\n0.0073856\nF5\nChandler Bing\nF\nFriends\n\n\n0.8283600\n2.0439851\n-0.1671717\n-1.0484506\n-1.4319908\nF4\nJoey Tribbiani\nF\nFriends\n\n\n1.1395901\n1.7388233\n-0.0116502\n-0.6018825\n0.7415672\nF3\nPhoebe Buffay\nF\nFriends\n\n\n-0.6986759\n-1.2381315\n-1.7009218\n0.9037070\n-0.0672627\nF6\nRoss Geller\nF\nFriends"
  },
  {
    "objectID": "2022-08-16.html#plot",
    "href": "2022-08-16.html#plot",
    "title": "2022 Week 33: Psychometrics",
    "section": "Plot",
    "text": "Plot\n\ncharList <- c(\"Walter White\", \"Ted Mosby\", \"Dr. Gregory House\",\n              \"Gaius Baltar\", \"Selina Meyer\", \"Loki\")\n\npersPlot <- scores |> \n    mutate(across(1:5, ~ .x + abs(min(.x)))) |> \n    filter(char_name %in% charList) |> \n    pivot_longer(1:5, \n                 names_to = \"Trait\", \n                 values_to = \"Value\") |> \n    ggplot(aes(x = Trait, \n               y = Value, \n               fill = Trait)) + \n    geom_col() + \n    facet_wrap(~char_name) + \n    theme_ipsum_rc() + \n    coord_polar() + \n    scale_fill_ipsum(guide = guide_legend(nrow = 2)) +\n    theme(legend.position = \"bottom\", \n          axis.ticks = element_blank(), \n          axis.text.x = element_blank(),\n          axis.text.y = element_blank(),\n          plot.margin = margin(l=0, t = 30, b = 30),\n          axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          plot.background = element_rect(fill = \"white\", color = NA),\n          panel.spacing = unit(0, \"lines\")) +\n    ggtitle(label = \"Personality Traits of Troubled Protagonists\", \n            subtitle = \"Big Five metrics estimated from openpsychometrics.org data\")\n\ntmp <- tempfile()\nggsave(tmp, persPlot, device = \"svg\")\n\nSaving 7 x 7 in image\n\nrsvg_png(tmp, \"Out/2022-08-16.png\")\n\n\n\n\nFinal Plot\n\n\n\nsessionInfo()\n\nR version 4.2.1 (2022-06-23 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19043)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rsvg_2.3.1         hrbrthemes_0.8.0   showtext_0.9-5     showtextdb_3.0    \n [5] sysfonts_0.8.8     magrittr_2.0.3     tidytuesdayR_1.0.2 forcats_0.5.2     \n [9] stringr_1.4.1      dplyr_1.0.9        purrr_0.3.4        readr_2.1.2       \n[13] tidyr_1.2.0        tibble_3.1.7       tidyverse_1.3.2    ggplot2_3.3.6     \n\nloaded via a namespace (and not attached):\n [1] httr_1.4.4          bit64_4.0.5         vroom_1.5.7        \n [4] jsonlite_1.8.0      modelr_0.1.9        assertthat_0.2.1   \n [7] highr_0.9           selectr_0.4-2       googlesheets4_1.0.1\n[10] cellranger_1.1.0    yaml_2.3.5          gdtools_0.2.4      \n[13] Rttf2pt1_1.3.10     pillar_1.8.1        backports_1.4.1    \n[16] glue_1.6.2          extrafontdb_1.0     digest_0.6.29      \n[19] rvest_1.0.3         colorspace_2.0-3    htmltools_0.5.2    \n[22] pkgconfig_2.0.3     broom_1.0.1         haven_2.5.1        \n[25] scales_1.2.1        svglite_2.1.0       tzdb_0.3.0         \n[28] googledrive_2.0.0   farver_2.1.1        generics_0.1.3     \n[31] usethis_2.1.6       ellipsis_0.3.2      withr_2.5.0        \n[34] cli_3.3.0           crayon_1.5.1        readxl_1.4.1       \n[37] evaluate_0.16       fs_1.5.2            fansi_1.0.3        \n[40] xml2_1.3.3          textshaping_0.3.6   tools_4.2.1        \n[43] hms_1.1.2           gargle_1.2.0        lifecycle_1.0.1    \n[46] munsell_0.5.0       reprex_2.0.2        compiler_4.2.1     \n[49] systemfonts_1.0.4   rlang_1.0.4         grid_4.2.1         \n[52] rstudioapi_0.14     htmlwidgets_1.5.4   labeling_0.4.2     \n[55] rmarkdown_2.16      gtable_0.3.1        DBI_1.1.3          \n[58] curl_4.3.2          R6_2.5.1            lubridate_1.8.0    \n[61] knitr_1.40          bit_4.0.4           fastmap_1.1.0      \n[64] extrafont_0.18      utf8_1.2.2          ragg_1.2.2         \n[67] stringi_1.7.6       parallel_4.2.1      Rcpp_1.0.8.3       \n[70] vctrs_0.4.1         dbplyr_2.2.1        tidyselect_1.1.2   \n[73] xfun_0.31"
  },
  {
    "objectID": "2022-08-09.html",
    "href": "2022-08-09.html",
    "title": "2022 Week 32: Ferris Wheels",
    "section": "",
    "text": "library(ggplot2)\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\nlibrary(countrycode)"
  },
  {
    "objectID": "2022-08-09.html#load-data",
    "href": "2022-08-09.html#load-data",
    "title": "2022 Week 32: Ferris Wheels",
    "section": "Load Data",
    "text": "Load Data\n\ntuesdata <- tt_load(\"2022-08-09\")\n\n\n    Downloading file 1 of 1: `wheels.csv`\n\nwheels <- tuesdata$wheels\n\nhead(wheels)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n…1\nname\nheight\ndiameter\nopened\nclosed\ncountry\nlocation\nnumber_of_cabins\npassengers_per_cabin\nseating_capacity\nhourly_capacity\nride_duration_minutes\nclimate_controlled\nconstruction_cost\nstatus\ndesign_manufacturer\ntype\nvip_area\nticket_cost_to_ride\nofficial_website\nturns\n\n\n\n\n1\n360 Pensacola Beach\n200.00\nNA\n2012-07-03\n2013-01-01\nUSA\nPensacola Beach; Florida\n42\n6\n252\n1260\n12.0\nYes\nUnknown\nMoved\nRealty Masters of FL\nTransportable\nYes\nNA\nNA\n4\n\n\n2\nAmuran\n303.00\n199.8\n2004-01-01\nNA\nJapan\nKagoshima; Kyushu\n36\nNA\nNA\nNA\n14.5\nYes\nUnknown\nOperating\nNA\nNA\nNA\nNA\nNA\n1\n\n\n3\nAsiatique Sky\n200.00\n200.0\n2012-12-15\nNA\nTailand\nAsiatique the Riverfront\n42\nNA\nNA\nNA\nNA\nYes\nUnknown\nOperating\nDutch Wheels (Vekoma)\nNA\nNA\nNA\nhttp://www.asiatiquesky.com/\nNA\n\n\n4\nAurora Wheel\n295.00\n272.0\nNA\nNA\nJapan\nNagashima Spa Land; Mie; Honshu\nNA\nNA\nNA\nNA\nNA\nNA\nUnknown\nOperating\nNA\nFixed\nNA\nNA\nhttp://www.nagashima-onsen.co.jp/\nNA\n\n\n5\nBaghdad Eye\n180.00\nNA\n2011-01-01\nNA\nIraq\nAl-Zawraa Park; Baghdad\n40\n6\n240\n960\n15.0\nNA\n$6 million USD\nOperating\nNA\nNA\nNA\n3.5\nNA\nNA\n\n\n6\nBeijing Great Wheel\n692.64\n642.7\nNA\nNA\nChina\nChaoyang Park; Beijing\n48\n40\n1920\n5760\n20.0\nyes\n$290 million USD\nDelayed\nThe Great Wheel Corporation\nFixed\nNA\nNA\nNA\n1"
  },
  {
    "objectID": "2022-08-09.html#clean-data",
    "href": "2022-08-09.html#clean-data",
    "title": "2022 Week 32: Ferris Wheels",
    "section": "Clean Data",
    "text": "Clean Data\n\nwheels <- wheels |> \n    mutate(region = countryname(country, destination = \"region\"),\n           region = case_when(\n             country == \"Phillippines\" ~ \"East Asia & Pacific\",\n             country == \"Dubai\" ~ \"Middle East & North Africa\",\n             TRUE ~ region),\n           diameter = replace_na(diameter, mean(diameter, na.rm = TRUE)))\n\nWarning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Dubai, Phillippines"
  },
  {
    "objectID": "2022-08-09.html#plot",
    "href": "2022-08-09.html#plot",
    "title": "2022 Week 32: Ferris Wheels",
    "section": "Plot",
    "text": "Plot\n\nwheelPlot <- wheels |> \n    filter(opened > \"1975-01-01\") |> \n    ggplot(aes(x = opened, \n               y = height, \n               color = region,\n               fill = region)) +\n    geom_point(aes(size = diameter),\n               alpha = 0.75) +\n    theme_bw() +\n    theme(legend.position = \"bottom\", \n          legend.box = \"vertical\", \n          legend.box.just = \"left\") +\n    geom_smooth(method = \"glm\",\n                method.args = list(family = \"quasipoisson\")) + \n    scale_color_viridis_d() +\n    scale_fill_viridis_d() +\n    guides(color = guide_legend(nrow=2,\n                                byrow=TRUE,\n                                title = \"Region\"),\n           fill = guide_legend(nrow=2,\n                               byrow=TRUE,\n                               title = \"Region\"),\n           size = guide_legend(title = \"Wheel Diameter\")) +\n    xlab(\"Opening Date\") +\n    ylab(\"Wheel Height\") +\n    ggtitle(\"Ferris Wheel Height and Diameter by Region and Opening Date From 1975\")\n\nggsave(\"Out/2022-08-09-final.jpg\", plot = wheelPlot)\n\nSaving 7 x 7 in image\n\n\n`geom_smooth()` using formula 'y ~ x'\n\n\nWarning: Removed 1 rows containing non-finite values (stat_smooth).\n\n\nWarning: Removed 1 rows containing missing values (geom_point).\n\n\n\n\n\nFinal Plot\n\n\n\nsessionInfo()\n\nR version 4.2.1 (2022-06-23 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19043)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] countrycode_1.4.0  tidytuesdayR_1.0.2 forcats_0.5.2      stringr_1.4.1     \n [5] dplyr_1.0.9        purrr_0.3.4        readr_2.1.2        tidyr_1.2.0       \n [9] tibble_3.1.7       tidyverse_1.3.2    ggplot2_3.3.6     \n\nloaded via a namespace (and not attached):\n [1] httr_1.4.4          viridisLite_0.4.1   bit64_4.0.5        \n [4] vroom_1.5.7         jsonlite_1.8.0      splines_4.2.1      \n [7] modelr_0.1.9        assertthat_0.2.1    highr_0.9          \n[10] selectr_0.4-2       googlesheets4_1.0.1 cellranger_1.1.0   \n[13] yaml_2.3.5          pillar_1.8.1        backports_1.4.1    \n[16] lattice_0.20-45     glue_1.6.2          digest_0.6.29      \n[19] rvest_1.0.3         colorspace_2.0-3    Matrix_1.4-1       \n[22] htmltools_0.5.2     pkgconfig_2.0.3     broom_1.0.1        \n[25] haven_2.5.1         scales_1.2.1        tzdb_0.3.0         \n[28] googledrive_2.0.0   mgcv_1.8-40         farver_2.1.1       \n[31] generics_0.1.3      usethis_2.1.6       ellipsis_0.3.2     \n[34] withr_2.5.0         cli_3.3.0           magrittr_2.0.3     \n[37] crayon_1.5.1        readxl_1.4.1        evaluate_0.16      \n[40] fs_1.5.2            fansi_1.0.3         nlme_3.1-158       \n[43] xml2_1.3.3          textshaping_0.3.6   tools_4.2.1        \n[46] hms_1.1.2           gargle_1.2.0        lifecycle_1.0.1    \n[49] munsell_0.5.0       reprex_2.0.2        compiler_4.2.1     \n[52] systemfonts_1.0.4   rlang_1.0.4         grid_4.2.1         \n[55] rstudioapi_0.14     htmlwidgets_1.5.4   labeling_0.4.2     \n[58] rmarkdown_2.16      gtable_0.3.1        DBI_1.1.3          \n[61] curl_4.3.2          R6_2.5.1            lubridate_1.8.0    \n[64] knitr_1.40          fastmap_1.1.0       bit_4.0.4          \n[67] utf8_1.2.2          ragg_1.2.2          stringi_1.7.6      \n[70] parallel_4.2.1      vctrs_0.4.1         dbplyr_2.2.1       \n[73] tidyselect_1.1.2    xfun_0.31"
  }
]